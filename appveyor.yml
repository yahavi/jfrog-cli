# # ~~~ How to use Appveyor ~~~
# # Preconditions: Artifactory with external access and Bintray oss user.
# #
# # = Trigger tests on commits =
# #   1. Create a new project in Appveyor and choose jfrog-cli-go.
# #   2. In project settings, copy the 'Webhook URL' and create a new 'Push events' Webhook in Github.
# #
# # = Configure Artifactory =
# #   1. Create all necessary repositories for tests according to the README.
# #   2. Create a remote Nuget repository in Artifactory:
# #     A. Repository Key: choco
# #     B. Url: https://chocolatey.org
# #     * The test uses Chocolatey package manager to download Gradle Nuget package through Artifactory's cache.
# #
# # = Override credentials in Appveyor in case of a fork =
# #   1. In the project at Appveyor - Go to settings -> Environment.
# #   2. Override 'JFROG_CLI_RT_URL', 'JFROG_CLI_RT_USER' and 'JFROG_CLI_BINTRAY_USER'.
# #   3. Override 'JFROG_CLI_RT_PASSWORD' and 'JFROG_CLI_BINTRAY_APIKEY' with variable encryption.

# image:
#   - Visual Studio 2017

# build: off
# skip_tags: true
# stack: go 1.14, node 8, jdk 8
# clone_folder: c:\gopath\src\github.com\jfrog\jfrog-cli
# environment:
#   GOPATH: c:\gopath
#   GO111MODULE: on
#   CGO_ENABLED: 0
#   JAVA_HOME: C:\Program Files\Java\jdk1.8.0
#   GRADLE_OPTS: -Dorg.gradle.daemon=false

#   JFROG_CLI_RT_URL:
#     secure: RIh0gGFDn2JAnLUEEqLsQm0ihToJ6/4LiR411QpvqDgYYE7Y4Eif2e+wYndvHXnW
#   JFROG_CLI_RT_USER:
#     secure: YEB5Wiv9a2vNpUhy+MfL+A==
#   JFROG_CLI_RT_PASSWORD:
#     secure: Um8o75MQIieSavIemF4ySA==
#   JFROG_CLI_DIST_URL:
#     secure: RIh0gGFDn2JAnLUEEqLsQrfLmtDrzDd5Qphea4gOE0Lu1Uz2Xa/y+D0Mld917gwy
#   JFROG_CLI_BINTRAY_USER:
#     secure: 86Gh1wUR9EjUYrNPws+0DQ==
#   JFROG_CLI_BINTRAY_APIKEY:
#     secure: Bm9R9Zveb6Rxc6M4IWvpVi1j1txDSBwz2L+CHKDoxwDHDfPs7vMb8+gSbB63XAq+

#   COMMON_TESTS_ARGS:
#     go test -v github.com\jfrog\jfrog-cli --timeout 0 --rt.url="%JFROG_CLI_RT_URL%" --rt.user="%JFROG_CLI_RT_USER%" --rt.password="%JFROG_CLI_RT_PASSWORD%"
#   BT_CREDENTIALS_ARGS:
#     --bt.user="%JFROG_CLI_BINTRAY_USER%" --bt.key="%JFROG_CLI_BINTRAY_APIKEY%"

#   matrix:
#   - VET:
#     TEST_SUIT:
#       go vet github.com\jfrog\jfrog-cli
#   - ARTIFACTORY_TESTS:
#     TEST_SUIT:
#       "%COMMON_TESTS_ARGS%  --test.artifactory=true"
#   - BINTRAY_TESTS:
#     TEST_SUIT:
#       "%COMMON_TESTS_ARGS% %BT_CREDENTIALS_ARGS% --test.bintray=true"
#   - NPM_TESTS:
#     TEST_SUIT:
#       "%COMMON_TESTS_ARGS% --test.npm=true"
#   - MAVEN_TESTS:
#     TEST_SUIT:
#      "%COMMON_TESTS_ARGS% --test.maven=true"
#   - GRADLE_TESTS:
#     TEST_SUIT:
#       "choco install gradle -s %JFROG_CLI_RT_URL%/api/nuget/choco -u %JFROG_CLI_RT_USER% -p %JFROG_CLI_RT_PASSWORD% &&
#       %COMMON_TESTS_ARGS% --test.gradle=true"
#   - NUGET_TESTS:
#     TEST_SUIT:
#       "%COMMON_TESTS_ARGS% --test.nuget=true"
#   - GO_TESTS:
#     TEST_SUIT:
#       "%COMMON_TESTS_ARGS% --test.go=true"
#   - PIP_TESTS:
#     TEST_SUIT:
#       "C:\\Python37-x64\\python -m venv pip-venv &&
#       %COMMON_TESTS_ARGS% --test.pip=true --rt.pipVirtualEnv=C:\\gopath\\src\\github.com\\jfrog\\jfrog-cli\\pip-venv\\Scripts"
#   - DISTRIBUTION_TESTS:
#     TEST_SUIT:
#       "%COMMON_TESTS_ARGS% --rt.distUrl=%JFROG_CLI_DIST_URL% --test.distribution=true"

# test_script:
#   - "%TEST_SUIT%"
