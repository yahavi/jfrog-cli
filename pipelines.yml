resources:
  - name: jfrogCliGit
    type: GitRepo
    configuration:
      path: yahavi/jfrog-cli
      gitProvider: github


pipelines:
  # Global configuration
  - name: TestCLI
    configuration:
      runtime:
        type: image
        image:
          auto:
            language: go
            versions:
              - "1.13.7"
      environmentVariables:
        readOnly:
          GOPROXY: https://gocenter.io
          SDKMAN_DIR: $HOME/.sdkman
          M2_HOME: $SDKMAN_DIR/candidates/maven/current

    steps:
      # Artifactory tests
      # - name: Artifactory
      #   type: Bash
      #   configuration:
      #     integrations:
      #       - name: artifactory
      #     inputResources:
      #       - name: jfrogCliGit
      #   execution:
      #     onExecute:
      #       - cd $res_jfrogCliGit_resourcePath
      #       - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.artifactory -rt.url=$int_artifactory_url -rt.user=$int_artifactory_user -rt.password=$int_artifactory_apikey

      # Bintray tests
      # - name: Bintray
      #   type: Bash
      #   configuration:
      #     integrations:
      #       - name: artifactory
      #       - name: bintray
      #     inputResources:
      #       - name: jfrogCliGit
      #   execution:
      #     onExecute:
      #       - cd $res_jfrogCliGit_resourcePath
      #       - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.bintray -rt.url=$int_artifactory_url -rt.user=$int_artifactory_user -rt.password=$int_artifactory_apikey --bt.user=$int_bintray_user -bt.key=$int_bintray_key

      # # Npm tests
      # - name: Npm
      #   type: Bash
      #   configuration:
      #     integrations:
      #       - name: artifactory
      #     inputResources:
      #       - name: jfrogCliGit
      #   execution:
      #     onExecute:
      #       - cd $res_jfrogCliGit_resourcePath
      #       - curl -sL https://deb.nodesource.com/setup_11.x | sudo bash -
      #       - sudo apt install nodejs
      #       - npm --version
      #       - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.npm -rt.url=$int_artifactory_url -rt.user=$int_artifactory_user -rt.password=$int_artifactory_apikey

      # Install Maven and Gradle
      - name: Java
        type: Bash
        configuration:
          inputResources:
            - name: jfrogCliGit
        execution:
          onStart:
            - restore_cache_files sdkman_cache $SDKMAN_DIR
          onExecute:
            - sudo apt install zip
            - curl -s "https://get.sdkman.io" | bash
            - source "$SDKMAN_DIR/bin/sdkman-init.sh"
            - sdk install java `sdk list java | grep -E "8.*-zulu" | head -1 | awk '{print $NF}'` && java -version
            - sdk install maven 3.3.9
            - sdk install gradle
          onComplete:
            # - add_run_files $SDKMAN_DIR sdkman
            - add_cache_files $SDKMAN_DIR sdkman_cache

      # # Maven tests
      # - name: Maven
      #   type: Bash
      #   configuration:
      #     integrations:
      #       - name: artifactory
      #     inputResources:
      #       - name: jfrogCliGit
      #     inputSteps:
      #       - name: Java
      #   execution:
      #     onStart:
      #       - restore_run_files sdkman $SDKMAN_DIR
      #     onExecute:
      #       - cd $res_jfrogCliGit_resourcePath
      #       - source "$SDKMAN_DIR/bin/sdkman-init.sh"
      #       - mvn --version
      #       - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.maven -rt.url=$int_artifactory_url -rt.user=$int_artifactory_user -rt.password=$int_artifactory_apikey

      # # Gradle tests
      # - name: Gradle
      #   type: Bash
      #   configuration:
      #     integrations:
      #       - name: artifactory
      #     inputResources:
      #       - name: jfrogCliGit
      #     inputSteps:
      #       - name: Java
      #   execution:
      #     onStart:
      #       - restore_run_files sdkman $SDKMAN_DIR
      #     onExecute:
      #       - cd $res_jfrogCliGit_resourcePath
      #       - source "$SDKMAN_DIR/bin/sdkman-init.sh"
      #       - gradle --version
      #       - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.gradle -rt.url=$int_artifactory_url -rt.user=$int_artifactory_user -rt.password=$int_artifactory_apikey
      
      # # Go tests
      # - name: Go
      #   type: Bash
      #   configuration:
      #     integrations:
      #       - name: artifactory
      #     inputResources:
      #       - name: jfrogCliGit
      #   execution:
      #     onExecute:
      #       - cd $res_jfrogCliGit_resourcePath
      #       - go version
      #       - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.go -rt.url=$int_artifactory_url -rt.user=$int_artifactory_user -rt.password=$int_artifactory_apikey
      
      # # Pip tests
      # - name: Pip
      #   type: Bash
      #   configuration:
      #     integrations:
      #       - name: artifactory
      #     inputResources:
      #       - name: jfrogCliGit
      #   execution:
      #     onExecute:
      #       - cd $res_jfrogCliGit_resourcePath
      #       - pip --version
      #       - virtualenv .venv
      #       - source .venv/bin/activate
      #       - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.pip -rt.url=$int_artifactory_url -rt.user=$int_artifactory_user -rt.password=$int_artifactory_apikey
      
      # # Distribution tests
      # - name: Distribution
      #   type: Bash
      #   configuration:
      #     integrations:
      #       - name: artifactory
      #       - name: distribution
      #     inputResources:
      #       - name: jfrogCliGit
      #   execution:
      #     onExecute:
      #       - cd $res_jfrogCliGit_resourcePath
      #       - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.distribution -rt.url=$int_artifactory_url -rt.user=$int_artifactory_user -rt.password=$int_artifactory_apikey -rt.distUrl=$int_distribution_url
