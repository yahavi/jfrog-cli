resources:
  - name: jfrogCliGit
    type: GitRepo
    configuration:
      path: yahavi/jfrog-cli
      gitProvider: myGitHub

pipelines:
  # Global configuration
  - name: TestCLI
    configuration:
      runtime:
        type: image
        image:
          auto:
            language: go
            versions:
              - "1.13.7"
    
    steps:
      # Artifactory tests
      - name: Artifactory
        type: Bash
        configuration:
          integrations:
            - name: myArtifactory
          inputResources:
            - name: jfrogCliGit
        execution:
          onExecute:
            - cd $res_jfrogCliGit_resourcePath
            - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.artifactory -rt.url=$int_myArtifactory_url -rt.user=$int_myArtifactory_user -rt.password=$int_myArtifactory_apikey

      # Bintray tests
      - name: Bintray
        type: Bash
        configuration:
          integrations:
            - name: myArtifactory
            - name: bintray
          inputResources:
            - name: jfrogCliGit
        execution:
          onExecute:
            - cd $res_jfrogCliGit_resourcePath
            - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.bintray -rt.url=$int_myArtifactory_url -rt.user=$int_myArtifactory_user -rt.password=$int_myArtifactory_apikey --bt.user=$int_bintray_user -bt.key=$int_bintray_key

      # Npm tests
      - name: Npm
        type: Bash
        configuration:
          integrations:
            - name: myArtifactory
          inputResources:
            - name: jfrogCliGit
        execution:
          onExecute:
            - cd $res_jfrogCliGit_resourcePath
            - sudo apt install nodejs
            - npm --version
            - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.npm -rt.url=$int_myArtifactory_url -rt.user=$int_myArtifactory_user -rt.password=$int_myArtifactory_apikey

      # Maven tests
      - name: Maven
        type: Bash
        configuration:
          integrations:
            - name: myArtifactory
          inputResources:
            - name: jfrogCliGit
        execution:
          onExecute:
            - cd $res_jfrogCliGit_resourcePath
            - curl -s "https://get.sdkman.io" | bash
            - source "/home/appveyor/.sdkman/bin/sdkman-init.sh"
            - export MAVEN_HOME=/home/appveyor/.sdkman/candidates/maven/current && sdk use maven 3.3.9 || sdk install maven 3.3.9
            - mvn --version
            - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.maven -rt.url=$int_myArtifactory_url -rt.user=$int_myArtifactory_user -rt.password=$int_myArtifactory_apikey

      # Gradle tests
      - name: Gradle
        type: Bash
        configuration:
          integrations:
            - name: myArtifactory
          inputResources:
            - name: jfrogCliGit
        execution:
          onExecute:
            - cd $res_jfrogCliGit_resourcePath
            - curl -s "https://get.sdkman.io" | bash
            - source "/home/appveyor/.sdkman/bin/sdkman-init.sh"
            - export GRADLE_HOME=/home/appveyor/.sdkman/candidates/gradle/current && sdk default gradle || sdk install gradle
            - gradle --version
            - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.gradle -rt.url=$int_myArtifactory_url -rt.user=$int_myArtifactory_user -rt.password=$int_myArtifactory_apikey

      # Go tests
      - name: Go
        type: Bash
        configuration:
          integrations:
            - name: myArtifactory
          inputResources:
            - name: jfrogCliGit
        execution:
          onExecute:
            - go version
            - cd $res_jfrogCliGit_resourcePath
            - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.go -rt.url=$int_myArtifactory_url -rt.user=$int_myArtifactory_user -rt.password=$int_myArtifactory_apikey

      # Pip tests
      - name: Pip
        type: Bash
        configuration:
          integrations:
            - name: myArtifactory
          inputResources:
            - name: jfrogCliGit
        execution:
          onExecute:
            - pip --version
            - cd $res_jfrogCliGit_resourcePath
            - python -m virtualenv pip-venv
            - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.pip -rt.url=$int_myArtifactory_url -rt.user=$int_myArtifactory_user -rt.password=$int_myArtifactory_apikey
      
      # Distribution tests
      # - name: Pip
      #   type: Bash
      #   configuration:
      #     integrations:
      #       - name: myArtifactory
      #     inputResources:
      #       - name: jfrogCliGit
      #   execution:
      #     onExecute:
      #       - cd $res_jfrogCliGit_resourcePath
      #       - go test -v github.com/jfrog/jfrog-cli --timeout 0 -test.distribution -rt.url=$int_myArtifactory_url -rt.user=$int_myArtifactory_user -rt.password=$int_myArtifactory_apikey